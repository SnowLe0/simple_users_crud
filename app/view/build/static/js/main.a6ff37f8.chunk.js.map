{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","wrapper","margin","table","minWidth","remove","cursor","fontWeight","fontSize","color","edit","editRow","background","sendBtn","DenseTable","classes","useState","users","setUsers","setEdit","userPanel","setUserPanel","Date","afterDate","setAfterDate","beforeDate","setBeforeDate","offset","limit","filter","setFilter","tableHead","useRef","usersCount","offsetField","limitField","nameField","removeHandler","e","id","target","parentElement","cells","innerHTML","fetch","method","headers","then","response","json","data","user","alert","editHandler","i","length","current","useEffect","format","name","TableContainer","className","component","Paper","Table","TableHead","TableRow","map","value","TableCell","align","TableBody","scope","username","first_name","last_name","email","gender","created","modified","onClick","Typography","style","float","variant","size","slice","Object","values","type","onChange","newUsers","body","JSON","stringify","error","display","justifyContent","alignItems","TextField","label","defaultValue","ref","utils","DateFnsUtils","ampm","onError","console","log","Button","lastChild","arr","newUser","newUserField","Array","prototype","forEach","call","cell","date","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6ff37f8.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Typography,\n    Button,\n    TextField\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {KeyboardDateTimePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport {format} from 'date-fns';\n\n\nconst useStyles = makeStyles({\n    wrapper: {\n        margin: '20px 0',\n    },\n    table: {\n        minWidth: 650,\n    },\n    remove: {\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: '1.2rem',\n        '&:hover': {\n            color: \"#f00\",\n        },\n    },\n    edit: {\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: '1.2rem',\n        '&:hover': {\n            color: \"#0f0\",\n        },\n    },\n    editRow: {\n        background: '#efffe0'\n    },\n    sendBtn: {\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: '1.2rem',\n        '&:hover': {\n            background: '#e0ffc4'\n        }\n    },\n});\n\n\nexport default function DenseTable() {\n\n    const classes = useStyles();\n\n    const [users, setUsers] = useState([]);\n    const [edit, setEdit] = useState(null);\n    const [userPanel, setUserPanel] = useState(false);\n    const [afterDate, setAfterDate] = useState(new Date(\"2018-01-01 00:00:00\"));\n    const [beforeDate, setBeforeDate] = useState(new Date());\n    const [filter, setFilter] = useState({offset: 0, limit: 10, afterDate, beforeDate});\n\n    const tableHead = useRef([]);\n    const usersCount = useRef(0);\n    const offsetField = useRef(null);\n    const limitField = useRef(null);\n    const nameField = useRef(null);\n\n    useEffect(() => {\n\n        fetch(`http://localhost:8080/users?offset=${filter.offset}&limit=${filter.limit}&filter[afterDate]=${format(filter.afterDate, 'yyyy-MM-dd HH:mm:ss')}&filter[beforeDate]=${format(filter.beforeDate, 'yyyy-MM-dd HH:mm:ss')}` + (filter.name ? `&filter[name]=${filter.name}` : ''))\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n\n                tableHead.current = ['id', 'username', 'first_name', 'last_name', 'email', 'gender', 'created', 'modified', 'delete', 'edit'];\n                usersCount.current = data['count'];\n                setUsers(data['data']);\n\n            });\n\n    }, [filter]);\n\n    function removeHandler(e) {\n\n        const id = +e.target.parentElement.parentElement.cells[0].innerHTML;\n\n        fetch(`http://localhost:8080/users/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                setUsers(users.filter(user => +user.id !== id));\n                alert(data);\n            });\n\n    }\n\n    function editHandler(e) {\n\n        const cells = e.target.parentElement.parentElement.cells;\n        let edit = {};\n        for (let i = 0; i < cells.length - 2; i++) {\n            edit[tableHead.current[i]] = cells[i].innerHTML;\n        }\n        setEdit(edit);\n\n    }\n\n    function sendHandler(e) {\n\n        const newUsers = [...users];\n\n        for (let i = 0; i < newUsers.length; i++) {\n            if (newUsers[i].id === edit.id) {\n                newUsers[i] = edit;\n                break;\n            }\n        }\n\n        fetch(`http://localhost:8080/users/${edit.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(edit)\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                if (data.error) {\n                    alert(data.error);\n                } else {\n                    setUsers(newUsers);\n                    setEdit(null);\n                    alert(data);\n                }\n            });\n\n    }\n\n    function addHandler(e) {\n\n        let newUser = {};\n        const newUserField = ['username', 'first_name', 'last_name', 'email', 'gender'];\n        Array.prototype.forEach.call(Array.prototype.slice.call(e.target.parentElement.cells, 0, -1), (cell, i) => newUser[newUserField[i]] = cell.lastChild.value);\n\n        const date = format(new Date(), 'yyyy-MM-dd HH:mm:ss');\n\n        fetch(`http://localhost:8080/users`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newUser)\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                if (data.error) {\n                    alert(data.error);\n                } else {\n                    setUserPanel(false);\n                    setUsers([...users, {...newUser, id: data, created: date, modified: date}])\n                    alert(data);\n                }\n            });\n\n    }\n\n    return (\n        <>\n            <TableContainer className={classes.wrapper} component={Paper}>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            {tableHead.current.map((value, i) => (\n                                <TableCell key={i} align=\"center\">{value}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {users.map(user => (\n                            <TableRow key={user.id}>\n                                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                                    {user.id}\n                                </TableCell>\n                                <TableCell align=\"center\">{user.username}</TableCell>\n                                <TableCell align=\"center\">{user.first_name}</TableCell>\n                                <TableCell align=\"center\">{user.last_name}</TableCell>\n                                <TableCell align=\"center\">{user.email}</TableCell>\n                                <TableCell align=\"center\">{user.gender}</TableCell>\n                                <TableCell align=\"center\">{user.created}</TableCell>\n                                <TableCell align=\"center\">{user.modified}</TableCell>\n                                <TableCell align=\"center\"><span className={classes.remove}\n                                                                onClick={removeHandler}>X</span></TableCell>\n                                <TableCell align=\"center\"><span className={classes.edit} onClick={editHandler}>E</span></TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Typography style={{float: 'right', margin: '0 20px'}}\n                            variant=\"button\">Count: {usersCount.current}</Typography>\n                {\n                    edit ?\n                        <>\n                            <Typography variant=\"h6\" align=\"center\">Edit</Typography>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                        {\n                                            tableHead.current.slice(0, -2).map((value, i) => (\n                                                <TableCell key={i} align=\"center\">{value}</TableCell>\n                                            ))\n                                        }\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow className={classes.editRow}>\n                                        {Object.values(edit).map((value, i) => (\n                                            <TableCell key={i} align=\"center\">\n                                                {\n                                                    i === 0 || i === 6 || i === 7 ? value :\n                                                        <input type=\"text\" name=\"input\" value={value}\n                                                               onChange={(e) => setEdit({\n                                                                   ...edit,\n                                                                   [tableHead.current[i]]: e.target.value\n                                                               })}/>\n                                                }\n                                            </TableCell>\n                                        ))}\n                                        <TableCell align=\"center\" className={classes.sendBtn}\n                                                   onClick={sendHandler}>Send</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </>\n                    : null\n                }\n            </TableContainer>\n            <div style={{display: 'flex', justifyContent: 'space-between', alignItems: 'end', margin: '20px 0'}}>\n                <TextField size=\"small\" label=\"Name\" defaultValue={filter.name} ref={nameField}/>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDateTimePicker\n                        variant=\"inline\"\n                        ampm={false}\n                        label=\"After Date\"\n                        value={afterDate}\n                        onChange={setAfterDate}\n                        onError={console.log}\n                        format=\"yyyy-MM-dd HH:mm:ss\"\n                    />\n                    <KeyboardDateTimePicker\n                        variant=\"inline\"\n                        ampm={false}\n                        label=\"Before Date\"\n                        value={beforeDate}\n                        onChange={setBeforeDate}\n                        onError={console.log}\n                        format=\"yyyy-MM-dd HH:mm:ss\"\n                    />\n                </MuiPickersUtilsProvider>\n                <TextField size=\"small\" type=\"number\" label=\"Offset\" defaultValue={filter.offset} ref={offsetField}/>\n                <TextField size=\"small\" type=\"number\" label=\"Limit\" defaultValue={filter.limit} ref={limitField}/>\n                <Button variant=\"contained\" onClick={e => setFilter({\n                    offset: +offsetField.current.lastChild.lastChild.value,\n                    limit: +limitField.current.lastChild.lastChild.value,\n                    name: nameField.current.lastChild.lastChild.value,\n                    afterDate,\n                    beforeDate\n                })}>Apply Filters</Button>\n            </div>\n            <Button onClick={(e) => setUserPanel(!userPanel)} variant=\"contained\">New User</Button>\n            {\n                userPanel ?\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                {\n                                    tableHead.current.slice(1, -4).map((value, i, arr) => (\n                                        <TableCell key={i} align=\"center\">{value}</TableCell>\n                                    ))\n                                }\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow className={classes.editRow}>\n                                {\n                                    tableHead.current.slice(1, -4).map((value, i) => (\n                                        <TableCell key={i} align=\"center\">\n                                            <input type=\"text\" name=\"input\"/>\n                                        </TableCell>\n                                    ))\n                                }\n                                <TableCell align=\"center\" className={classes.sendBtn}\n                                           onClick={addHandler}>ADD</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                : null\n            }\n        </>\n    );\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}